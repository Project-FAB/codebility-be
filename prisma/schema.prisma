// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id                String       @id @default(uuid()) @map("_id")
  name              String
  address           String
  email_address     String
  github_link       String
  portfolio_website String
  tech_stacks       String[]     @default(["HTML", "CSS", "JAVASCRIPT", "TYPESCRIPT", "REACT JS", "NEXT JS", "NODE JS", "EXPRESS JS", "MONGODB", "POSTRGRESQL", "DOCKER", "VERCEL"])
  password          String
  createdAt         DateTime     @default(now()) @map("created_at")
  updatedAt         DateTime     @default(now()) @map("updated_at")
  schedule          String[]     @default(["08:00AM - 05:00PM", "01:00PM - 10:00PM", "10:00PM - 07:00AM"])
  position          String[]     @default(["junior", "mid", "senior"])
  userType          RoleTypeEnum
  orgChart          org_chart    @relation(fields: [orgChartId], references: [id])
  orgChartId        String       @unique
  timeLogs          time_logs[]
  todolist          todo_list[]
  note              Notes[]
  projectId         String
  project           Projects     @relation(fields: [projectId], references: [id])
  clientId          String
  client            Clients      @relation(fields: [clientId], references: [id])
}

model org_chart {
  id        String   @id @default(uuid()) @map("_id")
  user      Users?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}

model time_logs {
  id                 String   @id @default(uuid()) @map("_id") @db.ObjectId
  time_in            DateTime @default(now()) @map("time_in")
  time_out           DateTime @default(now()) @map("time_out")
  total_worked_hours Int
  total_late_hours   Int
  total_ot_time      Int
  scheduled_time_in  DateTime
  scheduled_time_out DateTime
  timeLogsId         String
  userTimeLogs       Users    @relation(fields: [timeLogsId], references: [id])
}

model Projects {
  id          String      @id @default(uuid()) @map("_id")
  name        String
  github_link String
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @default(now()) @map("updated_at")
  user        Users[]
  clientId    String
  client      Clients     @relation(fields: [clientId], references: [id])
  todoList    todo_list[]
  note        Notes[]
}

model Clients {
  id             String     @id @default(uuid()) @map("_id")
  company_name   String
  email          String
  contact_number String
  linkedin_link  String
  location       String
  working_hours  String[]   @default(["08:00AM - 05:00PM", "01:00PM - 10:00PM", "10:00PM - 07:00AM"])
  user           Users[]
  project        Projects[]
}

model todo_list {
  id          String   @id @default(uuid()) @map("_id")
  title       String
  github_link String
  description String
  createdAt   DateTime @default(now()) @map("created_at")
  userId      String
  user        Users    @relation(fields: [userId], references: [id])
  projectId   String
  project     Projects @relation(fields: [projectId], references: [id])
}

model Notes {
  id          String   @id @default(uuid()) @map("_id")
  title       String
  github_link String
  description String
  createdAt   DateTime @default(now()) @map("created_at")
  userId      String
  user        Users    @relation(fields: [userId], references: [id])
  projectId   String
  project     Projects @relation(fields: [projectId], references: [id])
}

enum RoleTypeEnum {
  MENTOR
  INTERN
}
